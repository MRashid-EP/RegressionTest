///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PracticeRegressionTest.Regression.App1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The logIn recording.
    /// </summary>
    [TestModule("2991b218-6056-4cbf-b87a-3743a81be5bc", ModuleType.Recording, 1)]
    public partial class logIn : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PracticeRegressionTest.PracticeRegressionTestRepository repository.
        /// </summary>
        public static global::PracticeRegressionTest.PracticeRegressionTestRepository repo = global::PracticeRegressionTest.PracticeRegressionTestRepository.Instance;

        static logIn instance = new logIn();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public logIn()
        {
            NewVariable = "btnSubmit";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static logIn Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("dab575a2-4e64-4fd5-a3ce-96d126c60ea4")]
        public string NewVariable
        {
            get { return repo.NewVariable; }
            set { repo.NewVariable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TbxUserName' at 76;21.", repo.ApplicationUnderTest.TbxUserNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.TbxUserName.Click("76;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'mtes8750' with focus on 'ApplicationUnderTest.TbxUserName'.", repo.ApplicationUnderTest.TbxUserNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.TbxUserName.PressKeys("mtes8750");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TbxPassword' at 76;15.", repo.ApplicationUnderTest.TbxPasswordInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.TbxPassword.Click("76;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Password1!' with focus on 'ApplicationUnderTest.TbxPassword'.", repo.ApplicationUnderTest.TbxPasswordInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.TbxPassword.PressKeys("Password1!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnSubmit' at Center.", repo.ApplicationUnderTest.BtnSubmitInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.BtnSubmit.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
